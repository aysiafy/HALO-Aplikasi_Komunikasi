/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package aplikasi;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aysia
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    String username;
    String nama;
    List<User> daftarUser = new ArrayList<User>();
    User usr = new User();

    public Home() {
        initComponents();
        this.username = "";
        this.nama = "";
    }

    public Home(String username, String nama) {
        initComponents();
        this.username = username;
        this.nama = nama;
        try {
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();

            String sql = "SELECT * FROM users ORDER BY nama";
            ResultSet r = s.executeQuery(sql);
            while (r.next()) {
                User usr2 = new User();
                usr2.id = r.getInt("id");
                usr2.nama = r.getString("nama");
                usr2.username = r.getString("username");
                usr2.password = r.getString("password");
                daftarUser.add(usr2);
                cb_kontak.addItem(usr2.nama + "//" + usr2.username);
            }

        } catch (SQLException e) {
            System.out.println("Error");
        }

        try {
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();

            String sql = "SELECT * FROM pesan WHERE pengirim ='" + username + "' OR penerima ='" + username + "'";
            ResultSet r = s.executeQuery(sql);

            while (r.next()) {
                String pengirim = r.getString("pengirim");
                String penerima = r.getString("penerima");
                String isi = r.getString("isi");

                String tbData[] = {pengirim, penerima, isi};
                DefaultTableModel tblModel = (DefaultTableModel) table_dataPesan.getModel();
                tblModel.addRow(tbData);
            }
        } catch (SQLException e) {
            System.out.println("Error");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cb_kontak = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_dataPesan = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tf_pesan = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(249, 243, 238));

        jLabel2.setText("Siapa yang mau anda kirimkan pesan?");

        table_dataPesan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pengirim", "Penerima", "Isi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_dataPesan.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(table_dataPesan);
        if (table_dataPesan.getColumnModel().getColumnCount() > 0) {
            table_dataPesan.getColumnModel().getColumn(0).setMaxWidth(70);
            table_dataPesan.getColumnModel().getColumn(1).setMaxWidth(70);
        }

        tf_pesan.setColumns(20);
        tf_pesan.setLineWrap(true);
        tf_pesan.setRows(5);
        tf_pesan.setWrapStyleWord(true);
        jScrollPane2.setViewportView(tf_pesan);

        jLabel3.setText("Pesan :");

        jButton1.setText("Kirim");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Refresh");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addComponent(cb_kontak, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(28, 28, 28)
                        .addComponent(jButton1)
                        .addGap(37, 37, 37)))
                .addContainerGap(59, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cb_kontak, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(7, 7, 7)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 40, 360, 360);

        jPanel2.setBackground(new java.awt.Color(249, 206, 238));

        jLabel1.setFont(new java.awt.Font("Showcard Gothic", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("HALO!");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Keluar");
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 236, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 9, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)))
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 0, 360, 40);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        this.setVisible(false);
        Login frm = new Login();
        frm.setVisible(true);
        frm.pack();
        frm.setLocationRelativeTo(null);
        frm.setLocation(500, 150);
        frm.setSize(376, 450);
        frm.setResizable(false);
        frm.setDefaultCloseOperation(Login.EXIT_ON_CLOSE);
    }//GEN-LAST:event_jLabel9MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        usr.username = this.username;
        String penerimaPesan[] = cb_kontak.getSelectedItem().toString().split("//", 2);
        String isiPesan = tf_pesan.getText().toString();
        if (usr.kirimPesan(penerimaPesan[1], isiPesan) == 1) {
            JOptionPane.showMessageDialog(null, "Berhasil Dikirim!");
            DefaultTableModel tblModel1 = (DefaultTableModel) table_dataPesan.getModel();
            tblModel1.setRowCount(0);
            try {
                Connection c = Koneksi.getKoneksi();
                Statement s = c.createStatement();

                String sql = "SELECT * FROM pesan WHERE pengirim ='" + username + "' OR penerima ='" + username + "'";
                ResultSet r = s.executeQuery(sql);

                while (r.next()) {
                    String pengirim = r.getString("pengirim");
                    String penerima = r.getString("penerima");
                    String isi = r.getString("isi");

                    String tbData[] = {pengirim, penerima, isi};
                    DefaultTableModel tblModel = (DefaultTableModel) table_dataPesan.getModel();
                    tblModel.addRow(tbData);
                }
            } catch (SQLException e) {
                System.out.println("Error");
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        cb_kontak.removeAllItems();
        DefaultTableModel tblModel1 = (DefaultTableModel) table_dataPesan.getModel();
        tblModel1.setRowCount(0);
        daftarUser.removeAll(daftarUser);
        try {
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();

            String sql = "SELECT * FROM users ORDER BY nama";
            ResultSet r = s.executeQuery(sql);
            while (r.next()) {
                User usr2 = new User();
                usr2.id = r.getInt("id");
                usr2.nama = r.getString("nama");
                usr2.username = r.getString("username");
                usr2.password = r.getString("password");
                daftarUser.add(usr2);
                cb_kontak.addItem(usr2.nama + "//" + usr2.username);
            }

        } catch (SQLException e) {
            System.out.println("Error");
        }

        try {
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();

            String sql = "SELECT * FROM pesan WHERE pengirim ='" + username + "' OR penerima ='" + username + "'";
            ResultSet r = s.executeQuery(sql);

            while (r.next()) {
                String pengirim = r.getString("pengirim");
                String penerima = r.getString("penerima");
                String isi = r.getString("isi");

                String tbData[] = {pengirim, penerima, isi};
                DefaultTableModel tblModel = (DefaultTableModel) table_dataPesan.getModel();
                tblModel.addRow(tbData);
            }
        } catch (SQLException e) {
            System.out.println("Error");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cb_kontak;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable table_dataPesan;
    private javax.swing.JTextArea tf_pesan;
    // End of variables declaration//GEN-END:variables
}
